* DIVTRANS                                                         :Muchardt:
  
  We look at the implication of HERV sequences in the reactivation of
  immune related genes.

** DONE Project description 					     :ATTACH:
    CLOSED: [2018-01-08 Mon 16:06] DEADLINE: <2018-01-05 Fri>
    :PROPERTIES:
    :Attachments: Enhancers_of_Life.pdf
    :ID:       0f6a94ab-cd00-44b4-8a39-3ed6bf8f3414
    :END:      
 Mapping of Enhancers from transcriptome data Enhancers of
 transcription are regulatory sequences enabling gene expression from a
 distance. The landscape of active enhancers is cell-type specific and
 provides extensive information on the transcription factors at
 play. Currently, enhancers are mostly mapped based on the histone
 modifications positioned on their DNA sequence. This type of data is
 abundantly available for tumor-derived tissue culture cells, but
 difficult to obtain when the biological material has a limited
 availability. As an alternative approach, it is possible to detect
 enhancers as sites of divergent transcription. The objective of this
 project will be to develop tools allowing detection of sites of
 divergent transcription in transcriptome and run-on data, to evaluate
 the quality of the prediction by comparing the outcome with existing
 enhancer maps, and then ultimately use this approach to identify
 changes in the enhancer landscape between patients with multiple
 sclerosis and healthy controls.

 The endpoint of the project is to enable us to use RNA-seq data to
 identify transcription factor activities and pathways modified in
 patients with multiple sclerosis. The strategy relies on the recent
 observation that divergent transcription at enhancers initiates from
 transcription factor binding sites. Thus, by mapping enhancers with
 modified activity, it is possible to predict what transcription
 factors are responsible for these changes and to gain insight on the
 signal transduction pathways involved.  Sites of divergent
 transcription are best mapped using run-on data which contain only
 reads from sites of transcription initiation. Yet, it has not been
 possible so far to generate run-on data from patient samples, because
 the quantity and the quality of the RNA yielded by the biopsies are
 insufficient to generate the libraries. We therefore need to extract
 information on sites of divergent transcription from classical
 RNA-seq. With this type of data, the task is complicated by artefacts
 generated by divergent/convergent genes, and conditions to filter away
 false positives must be worked out. These may include the use of DNase
 hypersensitivity or Fantom5 CAGE data.  Technically, we would like to
 start with a set of publically available data including high depth
 RNA-seq on a tissue or cell line where enhancers have already been
 mapped (either by ChIP-seq or run-ons) and then implement a pipeline
 allowing to predict the position of these enhancers as reliably as
 possible using only the RNA-seq data.  Once this pipeline will be
 validated, we wish to use it on multiple sclerosis patient data to
 estimate changes in the enhancer landscape.  In a second step, we wish
 to develop a tool allowing to identify transcription factors with
 binding sites enriched within a specific set of activated (or
 repressed) enhancers. This tool would use the ENCODE Chip-seq and
 Factorbook repository to identify transcription factors
 overrepresented in the sequences covered by the enhancers.  Finally,
 as multiple sclerosis is associated with increased transcription of
 endogenous retroviruses (HERVs) that may have been coopted by the
 human genome because of their potential enhancer activity, we wish to
 explore a possible enrichment in HERVs sequences within enhancers
 modified by the disease.

** Divergent transcription identification
*** DONE [#A] 0.1
      CLOSED: [2018-01-10 Wed 16:13]
     Using divtrans pipeline

     http://localhost:8888/notebooks/hub/divtrans/code/11.1_Divtrans_Ribo-minus.ipynb

     Improvements:
     - [ ] Identify the center of divergent transcription event and
       create shortest interval between divergent reads

*** DONE [#A] 0.2
      CLOSED: [2018-01-12 Fri 12:21] DEADLINE: <2018-01-12 Fri>

      - [X] Verify that overlapping read pairs are considered

      - [X] Add all sites of divergent transcription (ie overlapping reads)

*** DONE [#B] 0.3
    CLOSED: [2018-05-18 ven. 10:37] DEADLINE: <2018-05-18 ven.>
     :LOGBOOK:
     CLOCK: [2018-05-02 mer. 11:26]--[2018-05-02 mer. 13:19] =>  1:53
     CLOCK: [2018-04-12 jeu. 12:53]--[2018-04-12 jeu. 16:35] =>  3:42
     CLOCK: [2018-04-12 jeu. 09:51]--[2018-04-12 jeu. 12:00] =>  2:09
     :END:

     - [X] Provide with the interval in between divergent reads (not
       the min and max of both fragments)

     - [X] Transfer to tars and tesla

     - [X] Identify divergent transcription at the read level (and not
       merged fragments) level.

       IDEA: THIS SHOULD BE ACTUALLY PRETTY EASY: Use sorted BAMS and
       for each read in - direction, look for a read downstream (in
       bam coordinate sorted file it will be further down in the file)
       on the + strand until a certain threshold. Then pass to the
       next read in - direction, etc...

     - [X] Stats on beds

*** DONE [#B] 0.4
    CLOSED: [2018-07-23 lun. 14:39] DEADLINE: <2018-07-27 ven.>
    :LOGBOOK:
    CLOCK: [2018-07-23 lun. 9:39]--[2018-07-23 lun. 15:35] =>  5:56
    CLOCK: [2018-07-17 mar. 08:51]--[2018-07-17 mar. 09:26] =>  0:35
    CLOCK: [2018-07-13 ven. 09:10]--[2018-07-13 ven. 16:20] =>  7:10
    CLOCK: [2018-07-12 jeu. 12:13]--[2018-07-12 jeu. 16:52] =>  4:39
    CLOCK: [2018-07-12 jeu. 08:53]--[2018-07-12 jeu. 11:30] =>  2:37
    CLOCK: [2018-07-11 mer. 09:05]--[2018-07-11 mer. 16:31] =>  7:26
    CLOCK: [2018-07-10 mar. 09:18]--[2018-07-10 mar. 16:38] =>  7:20
    CLOCK: [2018-05-30 mer. 12:32]--[2018-05-30 mer. 17:27] =>  4:55
    CLOCK: [2018-05-30 mer. 08:26]--[2018-05-30 mer. 11:20] =>  2:54
    CLOCK: [2018-05-18 ven. 08:23]--[2018-05-18 ven. 17:27] =>  9:04
    :END:
    
    1) [X] Check quality of prediction by intersecting divergent
       transcription beds 

       - [X] with CAGE fantom datasets

       - [X] with transcription factors (from ucsc)

    2) [X] Use strandness of CAGE data to improve overlap/filtering of
       divergent transcription intervals
       
       > Select divergent transcription intervals which are
       overlapping with at least one CAGE peaks and more stringently,
       two divergent peaks

    3) [X] Evaluate + and - transcription on/around divergent
       transcription intervals. Might put a threshold on the
       ratio of +/- transcription

       Options
       - option is to create SAF from beds (add to bed_lib) then
	featureCounts with stranded 1 and 2
       - Craw (Bertrand Neron)

    4) [X] Optimize quantification:

       FeatureCounts appears extremely slow (around 2h for a single strand and 8gb bam)

       > Use featureCounts "repair" beforehand ? Don't know if this
       will accelerate the processus
       >> Same issue

       > Trying featurecount cluster install (not conda)
       

       - [X] Alternatives:

	 - Tried bedtools coverage but doesn't take into account pairs
	 (leading to always similar quantification for + and - strands)

	 > Don't think this could be a proper alternative

	 - Deeptools

	 > BamCoverage is counting only on windows which can be
         defined from intervals (using a complement as blacklist) but
         the interval are apperently merged, leading to not exact
         count based of regions of interest (but n bp regions along the merged intervals)

	 >> Still this can be a sufficiently correct approximation 
	 
	 > computeMatrix: No option for strandness

	 - [X] Building own counting in [[file:~/Programming/pyNextGen/basics_bam.py::def%20count_over_intervals(self,%20bed_file):][bam_basics]]

*** CANCELLED [#B] 0.5 [1/3]                                        :Batsche:
    CLOSED: [2019-02-04 lun. 09:53]
    :LOGBOOK:
    CLOCK: [2018-07-23 lun. 15:50]--[2018-07-23 lun. 17:10] =>  1:20
    :END:

    1) [X] Running notebook on tars on MS Ribominus data from Mikkel

    2) [-] Set a criteria comparing coverage with neighboring coverage:
       
       The idea here is for detection of divergent transcription
       inside genes. We need to establish the background expression
       signal of the gene and see if there is an extra signal due to
       the divergent transcription.  *IDEA:* Calculate average
       coverage (upstream of divtrans event for + reads, and
       downstream of divtrans event for - reads) and calculate ratio
       with coverage observed in flanking regions of the divergent
       event for the - reads upstream and + reads downstream.

       > This criteria leads to divtrans detection problems at the
       borders of genes bodies (the artefactual antisense
       transcription for largely transcribed genes becomes higher that
       the antisense signal upstream, which is outside the gene body)
       This should not be problematic inside the gene body (assuming
       that the artefactual antisense noise is constant over the gene body)

       *IMPROVEMENTS* So might have to evaluate if the area of
       coverage computed are outside or inside the gene body

       - [-] Test this critera on EB data MCF10

	 - [X] Alignment on tars

	 - [ ] Lauching divergent transcription
	   
    3) [ ] Adjust +/- transcriptuion ratio threshold according to
       quality of prediction using method in 1)
       > by optimizing the jaccard index ?

*** CANCELLED [#B] 0.6 [0/2]
    CLOSED: [2019-02-04 lun. 09:53]

    see divtrans_0.6.ipynb

    Divergent transcription should be de novo as well as guided by
    already available data on enhancers:
    - Cage divtrans
    - Fantom5 enhancers
    - hmm enhancers

    Two options are (to be tested on dieldrin data):
    - [ ] filtering detected divtrans event with low or no
    threshold set by "filter_by_coverage" and intersect them with
    these differents intervals

    - [ ] detecting events only on these intervals (using the bam.multi_fetch)

*** CANCELLED [#B] Available solutions								     
    CLOSED: [2018-07-23 lun. 15:41]

     Checking available solutions (Found in cite:Lilam2014 ):
     
     - [ ] Testing https://github.com/Kraus-Lab/active-enhancers

       *BUG* Docker image not building
       Cannot reach archive.ubuntu and other ubuntu related depos
       
     - [ ] groHMM: 

       Designed for GRO-seq but might be of use with our
       totalRNA dataset

*** TODO 1.0
    SCHEDULED: <2019-02-28 jeu.>

    Part of the log for divtrans project has been lost. This is an
    attempt to restore his actual stage the <2019-02-04 lun.>

    - [X] CookieCutter trials for deployment + Pypi

    - [X] Coordinated sorted Bam version

    - [ ] Filter by counts
      
      > So far the counts are a simplified estimation (only
      considering the 2nd of the pair for counts)

    - [ ] Launch old version on MS data on tars

    - [ ] Make a usable version for Epigen
            
** Current workflow
** Data
*** Ribominus data

#+BEGIN_SRC sh
  cd  /home/ekornobis/data/muchardt/seqherv/data_11_2017
  pyNextGen.py *fq.gz
#+END_SRC

#+RESULTS:
| FileName            |  Nreads(M) |  Nbases(G) |      Ns | MinLen | MaxLen | MeanLen | StdevLen |         MeanGC |
| Compoud_A_1_1.fq.gz | 106.917918 | 16.0376877 | 1740681 |    150 |    150 |   150.0 |      0.0 | 0.504873103247 |
| Compoud_A_1_2.fq.gz | 106.917918 | 16.0376877 | 3510740 |    150 |    150 |   150.0 |      0.0 | 0.512369123262 |
| VEUDE_A_1_1.fq.gz   | 111.018276 | 16.6527414 | 1788598 |    150 |    150 |   150.0 |      0.0 | 0.519798430666 |
| VEUDE_A_1_2.fq.gz   | 111.018276 | 16.6527414 | 3601731 |    150 |    150 |   150.0 |      0.0 |  0.52754046556 |

*** Regions of interest 
Comparing CompoundA and Veude:

Clear enhancer:
chr2:231,487,450-231,560,819

chr1:912,436-960,073
chr1:14,642,898-14,652,296
chr1:16,977,736-17,015,333
chr1:17,048,606-17,086,203
chr1:17,212,506-17,250,102


Enhancer inside gene body:
TSHR: chr14:81,416,025-81,468,815

